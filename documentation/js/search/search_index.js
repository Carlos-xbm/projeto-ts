var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.231,1,2.354]],["body/controllers/AppController.html",[0,1.799,1,3.441,2,1.362,3,0.237,4,0.206,5,0.206,6,3.27,7,0.517,8,1.692,9,4.319,10,3.848,11,5.144,12,1.362,13,0.024,14,2.378,15,3.816,16,4.319,17,3.816,18,5.082,19,0.643,20,3.848,21,1.206,22,0.89,23,0.517,24,0.946,25,5.691,26,1.206,27,0.525,28,0.784,29,2.891,30,2.189,31,1.006,32,3.27,33,3.237,34,3.27,35,3.848,36,0.237,37,0.167,38,1.449,39,1.449,40,2.189,41,3.848,42,1.886,43,3.27,44,3.848,45,3.848,46,1.281,47,3.848,48,0.017,49,0.017]],["title/modules/AppModule.html",[50,1.158,51,2.354]],["body/modules/AppModule.html",[1,3.57,2,1.627,3,0.204,4,0.178,5,0.178,13,0.024,27,0.57,28,0.676,33,3.52,34,2.818,36,0.204,37,0.144,48,0.015,49,0.015,50,1.53,51,4.735,52,1.419,53,1.966,54,2.818,55,2.818,56,2.818,57,3.824,58,3.824,59,2.647,60,3.824,61,3.824,62,3.824,63,2.252,64,1.625,65,1.625,66,3.316,67,2.421,68,2.614,69,3.316,70,3.316,71,3.316,72,1.887,73,3.316,74,3.316,75,3.316]],["title/injectables/AppService.html",[33,1.978,76,0.966]],["body/injectables/AppService.html",[3,0.267,4,0.233,5,0.233,7,0.583,8,1.83,9,4.671,13,0.023,16,4.671,19,0.725,21,1.361,22,1.004,23,0.583,24,1.068,26,1.361,27,0.377,28,0.885,33,3.127,36,0.267,37,0.188,43,4.671,46,1.446,48,0.018,49,0.018,76,1.526,77,1.986,78,3.691,79,5.496,80,1.511,81,4.343,82,5.496,83,4.343,84,4.343,85,4.343]],["title/controllers/AuthController.html",[0,1.231,86,2.354]],["body/controllers/AuthController.html",[0,1.084,2,1.084,3,0.188,4,0.164,5,0.164,7,0.411,8,1.447,12,1.538,13,0.024,19,0.726,21,1.362,22,1.005,23,0.584,24,1.069,26,1.362,27,0.55,28,0.624,29,2.874,30,1.742,31,0.8,36,0.188,37,0.133,38,1.153,39,1.153,40,2.472,46,1.447,48,0.014,49,0.014,86,2.942,87,2.602,88,1.892,89,3.062,90,4.129,91,4.346,92,2.602,93,3.727,94,3.062,95,4.346,96,4.346,97,2.942,98,3.263,99,2.289,100,4.346,101,3.062,102,2.472,103,3.062,104,2.244,105,3.062,106,4.346,107,2.472,108,3.693,109,3.263,110,3.062,111,3.062,112,1.892,113,2.073,114,2.073,115,2.686,116,1.892,117,1.892,118,1.153,119,2.686,120,2.073,121,2.874,122,2.602,123,1.892,124,2.602,125,2.602,126,2.602,127,2.073,128,3.062,129,2.602,130,3.062,131,3.062,132,3.062,133,3.062,134,3.062,135,1.892,136,3.062,137,3.062]],["title/modules/AuthModule.html",[50,1.158,57,2.149]],["body/modules/AuthModule.html",[2,1.726,3,0.223,4,0.194,5,0.194,13,0.024,27,0.563,28,0.737,36,0.223,37,0.157,48,0.016,49,0.016,50,1.624,52,1.547,53,2.086,57,4.178,59,2.717,63,2.389,64,1.772,65,1.772,67,2.569,68,2.774,72,2.057,86,3.735,118,1.362,121,3.613,122,3.073,138,3.073,139,3.616,140,3.073,141,3.925,142,3.616,143,3.616,144,3.616,145,2.715,146,2.235,147,3.616,148,2.235,149,2.235,150,1.772,151,3.616,152,3.616,153,3.073,154,3.616,155,3.616,156,3.616]],["title/injectables/AuthService.html",[76,0.966,121,1.978]],["body/injectables/AuthService.html",[3,0.19,4,0.165,5,0.165,7,0.414,8,1.453,13,0.024,19,0.729,21,1.367,22,1.009,23,0.586,24,1.073,26,0.965,27,0.524,28,0.628,36,0.19,37,0.134,38,1.16,39,1.643,42,2.483,46,1.025,48,0.014,49,0.014,76,1.212,77,1.408,90,3.276,92,3.708,93,3.734,98,2.313,102,2.482,104,1.794,121,2.482,123,1.903,124,2.617,125,2.617,126,2.617,145,2.313,157,2.617,158,2.67,159,1.752,160,1.752,161,2.211,162,6.214,163,3.08,164,2.138,165,3.08,166,2.617,167,3.276,168,1.752,169,3.08,170,3.136,171,1.752,172,3.08,173,3.08,174,3.08,175,4.364,176,1.622,177,2.617,178,3.08,179,2.299,180,2.313,181,2.697,182,2.299,183,3.708,184,1.903,185,2.085,186,3.08,187,2.954,188,2.617,189,3.08,190,4.364,191,3.08,192,3.276,193,3.08,194,3.08,195,1.408,196,3.08]],["title/classes/CreateOrderDto.html",[37,0.151,197,1.978]],["body/classes/CreateOrderDto.html",[3,0.195,4,0.17,5,0.17,7,0.426,12,1.576,13,0.023,17,3.344,19,0.744,23,0.819,27,0.484,31,0.829,36,0.195,37,0.223,48,0.015,49,0.015,80,0.733,107,2.929,188,3.785,197,2.533,198,0.935,199,3.866,200,2.38,201,1.576,202,3.182,203,5.148,204,3.982,205,3.17,206,3.17,207,3.344,208,2.346,209,3.015,210,4.453,211,4.453,212,3.785,213,5.882,214,4.453,215,4.417,216,2.694,217,3.17,218,2.182,219,2.694,220,3.785,221,3.344,222,4.453,223,2.712,224,3.015,225,3.17,226,2.942,227,2.694,228,3.785,229,3.344,230,3.785,231,4.453,232,1.67,233,1.056,234,1.803,235,2.146,236,1.939,237,1.056,238,3.17,239,2.694,240,3.17,241,3.17,242,3.17,243,3.17,244,3.17,245,3.17,246,2.694,247,3.17,248,2.694]],["title/classes/CreateOrderProductDto.html",[37,0.151,204,2.354]],["body/classes/CreateOrderProductDto.html",[3,0.21,4,0.183,5,0.183,7,0.458,12,1.895,13,0.023,19,0.894,23,0.719,27,0.407,31,0.891,36,0.21,37,0.203,48,0.015,49,0.015,80,1.332,99,2.468,198,1.006,199,4.327,201,1.659,204,3.172,215,3.518,218,2.296,219,2.898,223,3.288,224,3.172,226,3.036,228,3.982,229,3.518,230,3.982,232,1.797,234,3.278,236,2.35,237,1.56,249,2.309,250,4.548,251,4.548,252,2.561,253,4.685,254,4.327,255,4.685,256,4.685,257,3.41,258,3.41,259,4.685,260,4.685,261,4.685,262,4.685,263,4.685,264,2.898,265,4.685,266,4.685,267,3.41,268,3.172]],["title/classes/CreateProductDto.html",[37,0.151,269,1.978]],["body/classes/CreateProductDto.html",[3,0.197,4,0.171,5,0.171,7,0.43,12,1.984,13,0.023,19,0.936,22,1.196,23,0.753,27,0.389,31,0.836,36,0.197,37,0.194,48,0.015,49,0.015,80,1.414,99,2.361,176,2.361,198,0.943,201,1.586,208,2.361,218,2.196,223,3.376,226,3.109,232,1.685,236,2.365,249,2.165,252,3.365,254,4.813,264,2.718,268,3.502,269,2.549,270,5.015,271,2.943,272,3.502,273,4.481,274,4.764,275,3.808,276,3.808,277,3.198,278,2.718,279,3.808,280,3.365,281,3.198,282,3.808,283,3.808,284,3.198,285,3.198,286,4.481,287,4.481,288,3.198,289,3.808,290,3.808,291,3.198,292,2.718]],["title/classes/CreateTableDto.html",[37,0.151,293,1.978]],["body/classes/CreateTableDto.html",[3,0.265,4,0.231,5,0.231,7,0.579,12,1.525,13,0.023,17,4.106,19,0.72,23,0.579,27,0.474,31,1.126,36,0.265,37,0.237,48,0.018,49,0.018,107,3.111,198,1.271,201,1.936,218,3.196,220,4.647,221,4.106,223,2.881,224,3.702,226,2.881,229,4.106,232,2.27,236,1.623,289,4.647,293,3.111,294,4.647,295,3.235,296,4.309,297,4.309]],["title/classes/CreateUserDto.html",[37,0.151,298,1.978]],["body/classes/CreateUserDto.html",[3,0.172,4,0.15,5,0.15,7,0.376,12,1.985,13,0.023,19,0.936,22,1.111,23,0.753,27,0.417,31,0.732,36,0.172,37,0.177,48,0.013,49,0.013,80,1.482,90,3.962,99,3.083,170,2.733,171,2.733,176,3.26,187,3.962,198,0.826,201,1.443,223,3.377,226,3.083,232,1.475,236,2.112,252,3.06,268,3.572,271,2.733,278,2.38,279,3.463,280,3.06,282,4.484,290,3.463,298,2.318,299,4.973,300,2.103,301,4.805,302,2.38,303,4.075,304,3.962,305,2.8,306,2.8,307,4.075,308,3.962,309,3.463,310,3.463,311,2.8,312,3.06,313,2.8,314,2.8,315,4.075,316,4.075,317,4.075,318,4.075,319,2.8,320,2.8,321,2.8,322,2.8,323,2.8,324,2.8,325,2.8,326,2.8,327,2.8]],["title/classes/LoginDto.html",[37,0.151,93,2.149]],["body/classes/LoginDto.html",[3,0.243,4,0.212,5,0.212,7,0.53,12,1.829,13,0.023,19,0.863,23,0.694,27,0.448,31,1.031,36,0.243,37,0.224,48,0.017,49,0.017,80,1.413,93,3.194,99,2.722,108,4.391,170,3.61,171,3.278,176,2.722,187,3.498,198,1.164,201,1.829,223,3.22,226,3.035,232,2.079,236,1.946,268,3.901,304,3.88,308,3.88,312,3.88,328,3.354,329,5.168,330,3.947,331,3.947,332,5.762]],["title/classes/LoginResponseDto.html",[37,0.151,123,2.149]],["body/classes/LoginResponseDto.html",[3,0.249,4,0.217,5,0.217,7,0.544,12,1.86,13,0.023,19,0.878,23,0.706,27,0.456,31,1.058,36,0.249,37,0.176,48,0.017,49,0.017,80,1.215,98,4.381,104,2.321,109,3.946,123,3.248,150,2.575,176,2.769,198,1.195,201,1.86,223,2.769,226,3.074,236,1.979,302,4.466,333,4.958,334,3.442,335,5.256,336,5.256,337,5.256,338,4.05,339,5.256,340,4.05,341,3.041]],["title/classes/Order.html",[37,0.151,234,1.978]],["body/classes/Order.html",[3,0.23,4,0.201,5,0.201,7,0.502,13,0.023,19,1.071,23,0.861,24,1.698,27,0.487,36,0.23,37,0.162,48,0.016,49,0.016,80,1.153,104,2.27,198,1.104,201,1.766,202,3.468,234,2.838,237,1.869,341,2.809,342,3.179,343,3.799,344,3.143,345,3.799,346,4.053,347,3.741,348,3.741,349,2.956,350,3.741,351,3.741,352,3.741,353,3.741,354,3.741,355,3.741]],["title/controllers/OrderController.html",[0,1.231,356,2.354]],["body/controllers/OrderController.html",[0,1.034,2,1.034,3,0.18,4,0.157,5,0.157,7,0.392,8,1.399,12,1.742,13,0.024,14,1.805,15,3.155,19,0.822,21,1.317,22,0.971,23,0.564,24,1.033,26,1.542,27,0.531,28,0.595,29,3.062,30,1.662,31,0.763,36,0.18,37,0.127,38,1.1,39,1.1,40,2.8,46,1.639,48,0.014,49,0.014,80,1.138,88,1.805,97,3.644,104,2.102,112,2.597,115,2.597,116,1.805,117,1.805,118,1.1,119,2.597,127,1.978,129,2.483,135,1.805,197,3.562,209,2.845,215,4.041,233,1.399,234,1.662,237,1.792,341,2.194,356,2.845,357,2.483,358,2.637,359,2.059,360,2.921,361,1.978,362,2.845,363,2.921,364,3.155,365,3.155,366,4.202,367,2.921,368,1.431,369,1.978,370,3.155,371,2.921,372,1.978,373,2.921,374,1.431,375,2.194,376,2.8,377,2.483,378,2.921,379,2.921,380,2.921,381,2.921,382,2.921,383,1.978,384,1.978,385,2.921]],["title/modules/OrderModule.html",[50,1.158,58,2.149]],["body/modules/OrderModule.html",[2,1.847,3,0.247,4,0.215,5,0.215,13,0.023,27,0.553,28,0.816,36,0.247,37,0.174,48,0.017,49,0.017,50,1.737,52,1.714,53,2.232,58,4.171,59,2.797,63,2.557,64,1.962,65,1.962,67,2.749,68,2.968,72,2.278,118,1.508,146,2.475,148,2.475,149,2.475,150,1.962,356,3.929,376,3.719,377,3.404,386,3.404,387,3.404,388,4.005,389,4.005,390,4.005]],["title/injectables/OrderService.html",[76,0.966,376,1.978]],["body/injectables/OrderService.html",[3,0.142,4,0.123,5,0.123,7,0.309,8,1.171,13,0.024,19,0.799,21,1.339,22,1.349,23,0.574,24,1.05,26,1.339,27,0.447,28,0.469,36,0.142,37,0.1,38,0.866,39,0.866,42,1.127,46,1.423,48,0.012,49,0.012,76,0.977,77,1.051,80,1.257,104,1.694,120,1.557,159,1.308,160,1.308,161,1.92,164,2.093,168,1.308,197,3.22,202,3.361,218,2.345,233,1.423,236,1.609,237,1.811,246,2.989,248,5.614,250,1.954,251,2.989,271,1.308,272,1.557,344,2.345,358,2.345,359,1.724,368,1.724,374,1.127,375,1.726,376,2.001,391,1.954,392,2.299,393,3.518,394,2.299,395,2.299,396,2.299,397,1.308,398,1.557,399,1.557,400,2.892,401,2.299,402,3.518,403,2.299,404,2.299,405,2.299,406,2.299,407,2.299,408,2.299,409,2.299,410,6.377,411,1.557,412,2.299,413,2.299,414,2.299,415,2.299]],["title/modules/PrismaModule.html",[50,1.158,59,1.488]],["body/modules/PrismaModule.html",[3,0.27,4,0.235,5,0.235,13,0.023,27,0.479,28,0.892,36,0.27,37,0.19,48,0.018,49,0.018,50,1.84,52,1.874,53,2.364,59,2.907,63,2.707,64,2.146,65,2.146,67,2.91,161,2.834,416,3.721,417,3.721,418,3.721,419,4.379,420,5.525,421,4.379]],["title/injectables/PrismaService.html",[76,0.966,161,1.395]],["body/injectables/PrismaService.html",[3,0.245,4,0.213,5,0.213,7,0.534,8,1.729,13,0.023,19,0.867,21,1.246,22,0.919,23,0.534,24,0.977,26,1.627,27,0.451,28,0.81,36,0.245,37,0.172,48,0.017,49,0.017,76,1.442,77,1.818,120,2.691,158,3.501,161,2.083,179,2.735,422,3.378,423,2.954,424,4.914,425,5.192,426,6.524,427,5.192,428,6.131,429,3.976,430,3.378,431,3.976,432,3.976,433,3.976,434,3.976,435,3.976]],["title/classes/Product.html",[37,0.151,349,1.832]],["body/classes/Product.html",[3,0.24,4,0.209,5,0.209,7,0.524,13,0.023,19,1.105,22,1.325,23,0.889,24,1.596,36,0.24,37,0.169,48,0.017,49,0.017,80,1.552,198,1.152,201,1.816,218,2.514,236,2.158,237,1.908,271,3.26,272,3.88,343,3.88,345,3.88,346,4.121,349,2.703,436,3.317,437,3.904,438,3.904,439,3.904,440,3.904,441,3.904,442,3.904,443,3.904]],["title/controllers/ProductController.html",[0,1.231,444,2.354]],["body/controllers/ProductController.html",[0,0.85,2,0.85,3,0.148,4,0.129,5,0.129,7,0.323,8,1.211,12,1.861,13,0.024,14,1.484,19,0.878,21,1.534,22,1.131,23,0.657,24,1.203,26,1.648,27,0.48,28,0.489,29,3.147,30,1.366,31,0.628,36,0.148,37,0.104,38,0.904,39,0.904,40,2.991,46,1.63,48,0.012,49,0.012,80,1.4,88,1.484,97,4.006,99,1.916,112,2.247,113,1.626,114,1.626,115,2.247,116,1.484,117,1.484,118,0.904,119,2.247,135,1.484,195,1.098,207,2.73,209,2.462,212,3.09,233,1.211,235,2.462,237,2.118,254,4.443,269,3.147,349,1.265,358,2.398,359,1.782,361,1.626,362,2.462,364,2.73,365,2.73,368,1.177,369,1.626,372,1.626,374,1.177,383,1.626,384,1.626,444,2.462,445,2.041,446,3.09,447,1.916,448,2.402,449,2.402,450,2.402,451,4.701,452,2.402,453,2.041,454,1.803,455,3.09,456,2.402,457,2.041,458,1.366,459,3.657,460,1.803,461,3.636,462,2.402,463,1.803,464,1.366,465,2.496,466,2.041,467,2.402,468,2.402,469,1.803,470,2.402,471,2.402,472,2.402,473,1.803,474,1.803,475,2.402,476,1.803,477,1.803,478,2.041,479,2.402]],["title/modules/ProductModule.html",[50,1.158,60,2.149]],["body/modules/ProductModule.html",[2,1.847,3,0.247,4,0.215,5,0.215,13,0.023,27,0.553,28,0.816,36,0.247,37,0.174,48,0.017,49,0.017,50,1.737,52,1.714,53,2.232,59,2.797,60,4.171,63,2.557,64,1.962,65,1.962,67,2.749,68,2.968,72,2.278,118,1.508,146,2.475,148,2.475,149,2.475,150,1.962,444,3.929,465,3.719,466,3.404,480,3.404,481,4.005,482,3.404,483,4.005,484,4.005]],["title/injectables/ProductService.html",[76,0.966,465,1.978]],["body/injectables/ProductService.html",[3,0.146,4,0.127,5,0.127,7,0.318,8,1.197,13,0.024,19,0.954,21,1.723,22,1.271,23,0.738,24,1.352,26,1.723,27,0.477,28,0.482,36,0.146,37,0.103,38,0.891,39,0.891,42,2.13,46,1.739,48,0.012,49,0.012,76,0.998,77,1.081,80,1.465,102,3.35,107,1.345,158,3.34,159,1.345,160,1.345,161,1.948,164,1.761,168,1.345,179,2.558,181,1.461,182,1.246,184,1.461,185,1.601,195,1.643,208,1.246,233,1.197,235,2.433,237,2.009,269,2.762,349,1.893,358,2.379,359,1.761,368,1.761,374,1.159,397,1.345,398,1.601,399,1.601,400,3.287,411,2.433,447,2.29,458,2.044,459,3.001,464,1.345,465,2.044,485,2.01,486,2.698,487,2.365,488,2.433,489,2.365,490,3.723,491,2.433,492,2.365,493,2.365,494,2.698,495,2.365,496,2.365,497,2.365,498,1.776,499,2.365,500,2.365,501,1.776,502,3.264,503,2.365,504,1.776,505,3.264,506,2.365,507,1.776,508,2.365,509,2.365]],["title/classes/Table.html",[37,0.151,344,1.704]],["body/classes/Table.html",[3,0.266,4,0.232,5,0.232,7,0.581,13,0.023,19,1.057,23,0.85,24,1.64,36,0.266,37,0.188,48,0.018,49,0.018,80,1.267,198,1.276,201,1.941,218,3.2,237,2.004,343,4.075,344,2.686,345,4.075,346,4.284,510,3.676,511,4.326,512,4.326,513,4.326,514,4.326]],["title/controllers/TableController.html",[0,1.231,515,2.354]],["body/controllers/TableController.html",[0,0.848,2,0.848,3,0.147,4,0.128,5,0.128,7,0.322,8,1.209,12,1.859,13,0.024,14,1.481,15,2.726,19,0.877,21,1.532,22,1.13,23,0.656,24,1.202,26,1.646,27,0.498,28,0.488,29,3.144,30,1.363,31,0.626,36,0.147,37,0.104,38,0.902,39,0.902,40,2.988,46,1.628,48,0.012,49,0.012,80,1.4,88,1.481,102,3.364,112,2.243,113,1.622,114,1.622,115,2.243,116,1.481,117,1.481,118,0.902,119,2.243,135,1.481,195,2.004,221,4.44,233,1.209,237,2.055,293,2.781,344,1.779,358,2.395,359,1.779,361,1.622,362,2.457,364,2.726,368,1.174,369,1.622,370,3.671,372,1.622,374,1.174,383,1.622,384,1.622,447,1.912,454,1.799,457,2.036,458,1.363,460,1.799,463,1.799,464,1.363,469,1.799,473,1.799,474,1.799,476,1.799,477,1.799,488,1.622,490,3.742,491,1.622,515,2.457,516,2.036,517,2.396,518,3.63,519,4.888,520,2.396,521,3.63,522,3.63,523,2.396,524,2.396,525,3.021,526,3.085,527,2.396,528,2.726,529,2.036,530,2.493,531,2.036,532,2.396,533,2.396,534,2.396,535,2.396,536,2.396,537,2.396,538,2.396,539,2.396]],["title/modules/TableModule.html",[50,1.158,61,2.149]],["body/modules/TableModule.html",[2,1.847,3,0.247,4,0.215,5,0.215,13,0.023,27,0.553,28,0.816,36,0.247,37,0.174,48,0.017,49,0.017,50,1.737,52,1.714,53,2.232,59,2.797,61,4.171,63,2.557,64,1.962,65,1.962,67,2.749,68,2.968,72,2.278,118,1.508,146,2.475,148,2.475,149,2.475,150,1.962,515,3.929,530,3.719,531,3.404,540,3.404,541,4.005,542,3.404,543,4.005,544,4.005]],["title/injectables/TableService.html",[76,0.966,530,1.978]],["body/injectables/TableService.html",[3,0.145,4,0.126,5,0.126,7,0.316,8,1.193,13,0.024,19,0.953,21,1.72,22,1.269,23,0.737,24,1.35,26,1.72,27,0.476,28,0.48,36,0.145,37,0.102,38,0.887,39,0.887,42,2.124,46,1.736,48,0.012,49,0.012,76,0.995,77,1.077,80,1.464,102,3.346,107,1.339,158,3.336,159,1.339,160,1.339,161,1.943,164,1.755,168,1.339,179,2.552,181,1.455,182,1.24,184,1.455,185,1.594,195,1.638,208,1.24,233,1.443,237,2.006,293,2.756,344,1.755,358,2.374,359,1.755,368,1.755,374,1.154,397,1.339,398,1.594,399,1.594,400,3.28,411,2.425,447,2.284,458,2.038,464,1.339,486,2.69,488,2.425,490,3.717,491,2.425,494,2.69,498,1.768,501,1.768,502,3.255,504,1.768,505,3.255,507,1.768,525,2.994,528,2.69,529,2.001,530,2.038,545,2.001,546,2.354,547,2.354,548,2.354,549,2.354,550,2.354,551,2.354,552,2.354,553,2.354,554,2.354,555,3.582,556,2.354]],["title/classes/UpdateOrderDto.html",[37,0.151,557,2.611]],["body/classes/UpdateOrderDto.html",[3,0.305,4,0.266,5,0.266,13,0.023,27,0.518,31,1.297,36,0.305,37,0.215,48,0.02,49,0.02,197,2.823,198,1.464,200,3.726,233,1.652,375,3.726,423,2.823,557,4.481,558,4.217,559,3.359,560,4.962]],["title/classes/UpdateProductDto.html",[37,0.151,459,2.149]],["body/classes/UpdateProductDto.html",[3,0.305,4,0.266,5,0.266,13,0.023,27,0.518,31,1.297,36,0.305,37,0.215,48,0.02,49,0.02,198,1.464,233,1.652,235,3.359,249,3.359,269,2.823,423,2.823,459,3.688,559,3.359,561,4.217,562,4.962]],["title/classes/UpdateTableDto.html",[37,0.151,525,2.149]],["body/classes/UpdateTableDto.html",[3,0.305,4,0.266,5,0.266,13,0.023,27,0.518,31,1.297,36,0.305,37,0.215,48,0.02,49,0.02,198,1.464,233,1.652,293,2.823,295,3.726,423,2.823,525,3.688,528,3.726,559,3.359,563,4.217,564,4.962]],["title/classes/UpdateUserDto.html",[37,0.151,565,2.149]],["body/classes/UpdateUserDto.html",[3,0.305,4,0.266,5,0.266,13,0.023,27,0.518,31,1.297,36,0.305,37,0.215,48,0.02,49,0.02,198,1.464,233,1.652,298,2.823,300,3.726,423,2.823,559,3.359,565,3.688,566,4.217,567,3.726,568,4.962]],["title/classes/User.html",[37,0.151,104,1.231]],["body/classes/User.html",[3,0.24,4,0.209,5,0.209,7,0.524,13,0.023,19,1.105,22,1.325,23,0.889,24,1.596,36,0.24,37,0.169,48,0.017,49,0.017,80,1.584,104,1.816,170,3.26,171,3.26,198,1.152,201,1.816,237,1.908,271,3.26,343,3.88,345,3.88,346,4.121,569,3.317,570,3.904,571,3.904,572,3.904,573,3.904,574,3.904,575,3.904,576,3.904]],["title/controllers/UserController.html",[0,1.231,577,2.354]],["body/controllers/UserController.html",[0,0.843,2,0.843,3,0.147,4,0.128,5,0.128,7,0.32,8,1.203,12,1.854,13,0.023,14,1.471,19,0.875,21,1.527,22,1.126,23,0.654,24,1.198,26,1.641,27,0.478,28,0.485,29,3.136,30,1.354,31,0.622,36,0.147,37,0.103,38,0.896,39,0.896,40,2.979,46,1.744,48,0.012,49,0.012,80,1.397,88,1.471,97,3.732,104,0.843,112,2.232,113,1.611,114,1.611,115,2.232,116,1.471,117,1.471,118,0.896,119,3.237,135,3.011,176,3.109,195,1.089,207,2.712,208,1.903,209,2.445,233,1.203,237,2.012,298,3.136,358,2.387,359,1.77,361,1.611,362,2.445,365,2.712,368,1.166,369,1.611,370,3.658,372,1.611,374,1.166,383,1.611,384,1.611,446,3.069,447,1.903,451,3.069,453,2.023,454,1.787,455,3.069,458,1.354,460,1.787,463,1.787,464,1.354,469,1.787,473,1.787,474,1.787,476,1.787,477,1.787,478,2.023,526,3.069,565,3.647,567,2.712,577,2.445,578,2.023,579,2.38,580,2.38,581,2.38,582,2.38,583,3.612,584,4.364,585,2.38,586,2.38,587,2.38,588,2.483,589,2.023,590,2.38,591,2.38,592,2.38,593,2.38,594,2.38,595,2.38,596,2.38,597,2.38]],["title/modules/UserModule.html",[50,1.158,62,2.149]],["body/modules/UserModule.html",[2,1.847,3,0.247,4,0.215,5,0.215,13,0.023,27,0.553,28,0.816,36,0.247,37,0.174,48,0.017,49,0.017,50,1.737,52,1.714,53,2.232,59,2.797,62,4.171,63,2.557,64,1.962,65,1.962,67,2.749,68,2.968,72,2.278,118,1.508,146,2.475,148,2.475,149,2.475,150,1.962,577,3.929,588,3.719,589,3.404,598,3.404,599,4.005,600,3.404,601,4.005,602,4.005]],["title/injectables/UserService.html",[76,0.966,588,1.978]],["body/injectables/UserService.html",[3,0.13,4,0.114,5,0.114,7,0.285,8,1.1,13,0.024,19,0.918,21,1.649,22,1.216,23,0.707,24,1.294,26,1.649,27,0.477,28,0.432,36,0.13,37,0.092,38,0.798,39,0.798,42,1.989,46,1.654,48,0.011,49,0.011,76,0.917,77,0.969,80,1.428,102,3.233,104,1.169,107,1.205,158,3.373,159,1.205,160,1.205,161,1.838,164,1.618,167,2.48,168,1.205,171,1.205,179,2.772,180,1.591,181,2.508,182,2.138,184,1.309,185,1.434,187,1.434,195,2.096,208,1.116,233,1.1,237,1.945,298,2.607,358,2.245,359,1.618,368,1.618,374,1.038,397,1.205,398,1.434,399,1.434,400,3.102,411,2.236,447,2.138,458,1.879,464,1.205,486,2.48,488,2.236,490,3.563,491,2.236,494,2.48,498,1.591,501,1.591,502,3.047,504,1.591,505,3.047,507,1.591,565,2.832,567,2.48,588,1.879,603,1.801,604,2.119,605,2.119,606,2.119,607,2.119,608,2.119,609,2.119,610,2.119,611,2.119,612,2.119,613,2.119,614,4.058,615,4.582,616,3.302,617,3.302,618,3.302,619,3.302,620,3.302,621,2.119,622,2.806,623,2.119,624,2.119,625,3.302,626,2.119,627,2.119,628,2.119]],["title/coverage.html",[629,3.566]],["body/coverage.html",[0,1.938,1,1.584,5,0.125,6,1.988,13,0.023,23,0.314,33,1.331,37,0.283,48,0.012,49,0.012,76,1.63,78,1.988,86,1.584,87,1.988,93,1.446,104,1.262,121,1.331,123,1.446,127,1.584,141,1.446,157,1.988,161,0.938,164,1.146,182,1.232,197,1.331,199,2.676,200,2.676,202,1.446,204,1.584,234,2.028,249,2.923,269,1.331,270,1.988,293,1.331,294,1.988,295,2.676,298,1.331,299,1.988,300,2.676,328,1.988,333,1.988,334,1.988,342,1.988,344,2.116,349,1.878,356,1.584,357,1.988,376,1.331,391,1.988,397,1.331,422,1.988,436,1.988,444,1.584,445,1.988,459,1.446,465,1.331,485,1.988,510,1.988,515,1.584,516,1.988,525,1.446,530,1.331,545,1.988,557,1.756,558,1.988,561,1.988,563,1.988,565,1.446,566,1.988,569,1.988,577,1.584,578,1.988,588,1.331,603,1.988,629,1.756,630,2.339,631,2.339,632,2.339,633,7.093,634,4.318,635,5.694,636,1.988,637,1.988,638,1.988,639,6.013,640,6.526,641,1.988,642,3.564,643,1.988,644,3.564,645,2.339,646,4.318,647,3.029,648,1.988,649,3.029,650,3.029,651,1.988,652,3.029,653,3.029,654,3.029,655,3.029,656,1.988,657,5.197,658,4.828,659,1.988,660,1.988,661,2.339]],["title/dependencies.html",[53,1.79,662,2.467]],["body/dependencies.html",[13,0.024,28,0.844,31,1.083,32,4.532,37,0.231,48,0.018,49,0.018,53,1.773,118,1.56,120,2.805,145,3.111,150,2.03,167,3.111,227,3.521,232,2.183,663,6.444,664,4.143,665,4.143,666,4.143,667,4.143,668,4.143,669,4.143,670,4.143,671,4.143,672,4.143,673,4.143,674,4.143,675,4.143,676,5.012,677,4.143,678,4.143,679,4.143,680,4.143,681,4.143,682,4.143,683,4.143,684,4.143,685,4.143,686,4.143,687,4.143,688,4.143,689,4.143,690,4.143]],["title/miscellaneous/functions.html",[691,1.965,692,3.555]],["body/miscellaneous/functions.html",[7,0.66,13,0.022,21,1.541,22,1.137,23,0.66,24,1.209,26,1.541,48,0.019,49,0.019,216,4.179,397,3.376,641,4.179,643,5.417,659,4.179,660,5.043,691,3.329,692,4.179,693,4.917,694,4.917,695,4.917,696,6.374]],["title/index.html",[7,0.39,697,2.903,698,2.903]],["body/index.html",[4,0.203,13,0.023,48,0.017,49,0.017,236,1.424,430,3.213,629,2.839,699,3.781,700,3.781,701,5.023,702,3.781,703,3.781,704,3.781,705,3.781,706,3.781,707,3.781,708,5.641,709,3.781,710,3.781,711,3.781,712,3.781,713,6.564,714,3.781,715,3.781,716,6.433,717,3.781,718,3.781,719,5.023,720,3.781,721,3.781,722,3.781,723,3.781,724,5.023,725,5.023,726,3.781,727,3.781,728,3.781,729,5.023,730,5.023,731,3.781,732,3.781,733,3.781,734,3.781,735,3.781,736,3.213,737,3.781,738,3.781,739,3.781,740,3.781,741,3.781,742,3.781,743,3.781,744,3.781,745,3.781,746,3.781,747,3.213,748,3.781,749,3.781,750,3.781,751,3.781,752,3.781,753,3.781,754,3.213]],["title/injectables/jwtStrategy.html",[76,0.966,141,2.149]],["body/injectables/jwtStrategy.html",[3,0.212,4,0.185,5,0.185,7,0.462,8,1.57,13,0.024,19,0.788,21,1.478,22,1.09,23,0.777,24,1.16,26,1.079,27,0.502,28,0.702,36,0.212,37,0.149,38,1.297,39,1.297,42,1.687,46,1.146,48,0.015,49,0.015,76,1.31,77,1.575,80,0.796,104,1.904,109,2.585,118,1.297,141,2.915,150,1.687,153,2.926,158,2.834,159,1.959,160,1.959,161,2.321,164,2.311,166,2.926,168,1.959,170,2.683,177,2.926,179,1.814,180,2.585,181,2.128,182,1.814,183,2.926,184,2.915,192,2.585,195,1.575,239,2.926,423,1.959,636,2.926,676,2.926,755,4.716,756,3.443,757,4.716,758,4.716,759,3.443,760,3.443,761,3.443,762,3.443,763,3.443,764,3.443,765,3.443,766,3.443,767,3.443,768,3.443,769,3.443,770,3.443,771,3.443,772,3.443,773,3.443]],["title/modules.html",[52,2.032]],["body/modules.html",[13,0.019,48,0.019,49,0.019,51,3.184,52,2.012,57,2.906,58,2.906,59,2.012,60,2.906,61,2.906,62,2.906,736,5.864,774,6.9,775,6.9,776,6.9]],["title/overview.html",[777,4.035]],["body/overview.html",[2,1.136,13,0.023,33,2.947,48,0.015,49,0.015,51,4.676,52,1.373,53,1.921,54,2.726,55,2.726,56,2.726,57,4.028,58,3.885,59,2.856,60,3.885,61,3.885,62,3.885,63,2.2,64,1.572,65,1.572,77,1.467,121,2.947,138,2.726,140,2.726,141,3.202,161,2.521,198,0.946,376,2.947,386,2.726,387,2.726,416,2.726,417,2.726,418,2.726,465,2.947,480,2.726,482,2.726,530,2.947,540,2.726,542,2.726,588,2.947,598,2.726,600,2.726,777,2.726,778,3.208,779,3.208,780,3.208,781,3.208]],["title/properties.html",[201,1.481,662,2.467]],["body/properties.html",[13,0.023,48,0.02,49,0.02,201,1.868,236,1.988,747,4.485,754,4.485,782,5.278,783,5.278,784,5.278]],["title/miscellaneous/variables.html",[691,1.965,785,3.555]],["body/miscellaneous/variables.html",[7,0.32,11,2.027,13,0.024,22,1.212,23,0.587,42,2.569,46,0.794,48,0.012,49,0.012,99,2.302,104,1.727,127,2.449,158,2.302,164,2.569,170,2.058,171,2.058,176,2.569,179,2.569,182,1.257,192,1.791,195,1.091,202,2.236,208,2.302,218,2.39,224,1.615,233,1.455,236,1.646,271,2.775,272,2.959,274,3.074,275,3.714,276,3.714,280,3.662,283,3.714,292,2.027,304,1.791,308,2.717,309,2.027,310,2.027,312,1.791,344,1.773,349,1.906,424,4.145,447,2.302,622,2.027,637,2.027,638,3.074,647,2.027,648,3.074,649,2.027,650,3.714,651,3.074,652,2.027,653,3.714,654,2.027,655,3.714,656,3.074,691,1.615,785,2.027,786,2.386,787,3.618,788,3.618,789,3.618,790,3.618,791,6.047,792,6.047,793,2.386,794,2.386,795,2.386,796,2.386,797,2.386,798,2.386,799,5.518,800,2.386,801,2.386,802,2.386,803,2.386,804,2.386,805,3.618,806,2.386,807,3.618,808,2.386,809,2.386,810,2.386,811,2.386,812,2.386,813,2.386,814,2.386,815,2.386,816,2.386,817,2.386,818,2.386]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtStrategy.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":783,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":646,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":645,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":622,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":781,"title":{},"body":{"overview.html":{}}}],["1c8c90d8",{"_index":241,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["2",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["2.8.13",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["24h",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["4404",{"_index":243,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["45.0",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45.00",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["47.0",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49.0",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.1.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":779,"title":{},"body":{"overview.html":{}}}],["6.1.3",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":778,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":780,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["96df",{"_index":244,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["_count",{"_index":413,"title":{},"body":{"injectables/OrderService.html":{}}}],["abcd@123",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":737,"title":{},"body":{"index.html":{}}}],["api",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":378,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":467,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":532,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":590,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":430,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":435,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":707,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":33,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["assert",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["async",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["atualizar",{"_index":461,"title":{},"body":{"controllers/ProductController.html":{}}}],["autenticado",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"injectables/jwtStrategy.html":{}}}],["autenticação",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/logged",{"_index":373,"title":{},"body":{"controllers/OrderController.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":747,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":121,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":738,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":611,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":616,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":621,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":776,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":774,"title":{},"body":{"modules.html":{}}}],["building",{"_index":702,"title":{},"body":{"index.html":{}}}],["c88bca403347",{"_index":245,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["carlos",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["carvalho",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["catch(handleerror",{"_index":411,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["cebola",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["checa",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":37,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"injectables/jwtStrategy.html":{}}}],["classes",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":386,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":388,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":387,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":416,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":418,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":417,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":480,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":481,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":482,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":540,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":541,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":542,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":598,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":599,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":600,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["comfime",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["completo",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":402,"title":{},"body":{"injectables/OrderService.html":{}}}],["const",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["constructor(prisma",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["constructor(private",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":379,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":468,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":533,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":591,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correta",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":629,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":469,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":380,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":448,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":579,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":488,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":360,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":393,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":343,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["createmany",{"_index":404,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":197,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":405,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":403,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":204,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":408,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":406,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":407,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":269,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":293,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":298,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criando",{"_index":240,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["criar",{"_index":362,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["dados",{"_index":339,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":400,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":346,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["de",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"controllers/ProductController.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["deletar",{"_index":455,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":454,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":538,"title":{},"body":{"controllers/TableController.html":{}}}],["delete(id",{"_index":491,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["development",{"_index":715,"title":{},"body":{"index.html":{}}}],["dfgfdgdg",{"_index":259,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["dfgg34",{"_index":263,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["dgfdggfdg",{"_index":260,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["docs",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["dos",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":490,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":615,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":614,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":374,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":464,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["e/ou",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":726,"title":{},"body":{"index.html":{}}}],["each",{"_index":247,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["editar",{"_index":526,"title":{},"body":{"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["eduardo",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":703,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":425,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":427,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["entities/product.entity",{"_index":499,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/table.entity",{"_index":529,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":612,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":399,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":660,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["est",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/jwtStrategy.html":{}}}],["esta",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{}}}],["estão",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["example",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/jwtStrategy.html":{}}}],["expiresin",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["exports",{"_index":420,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":423,"title":{},"body":{"injectables/PrismaService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"injectables/jwtStrategy.html":{}}}],["extractjwt",{"_index":763,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":768,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuawnrbmftzsi6imnhcmxvcy14ym0ilcjpyxqioje2nzazodizmzcsimv4cci6mty3mdq2odczn30.m56l0hzo4qkcj2f3wrlm0ncf1xfjclwdphaqmswja18",{"_index":337,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["f8ec",{"_index":242,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["false",{"_index":770,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{}}}],["findall",{"_index":358,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":486,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":494,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":359,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":384,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":368,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fraca",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":701,"title":{},"body":{"index.html":{}}}],["function",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":692,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":335,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":383,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":369,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":697,"title":{"index.html":{}},"body":{}}],["grow",{"_index":733,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":397,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":744,"title":{},"body":{"index.html":{}}}],["http://www.pizzafresh.com/imagem",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["httpcode",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":751,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":584,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":769,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["iguais",{"_index":620,"title":{},"body":{"injectables/UserService.html":{}}}],["image",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":432,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":415,"title":{},"body":{"injectables/OrderService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":428,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["informadas",{"_index":617,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"overview.html":{}}}],["installation",{"_index":712,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":714,"title":{},"body":{"index.html":{}}}],["invalido",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":332,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":296,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["ispositive",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":268,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":329,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":258,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["items",{"_index":266,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":740,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"injectables/jwtStrategy.html":{}}}],["jwt.strategy",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":767,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["jwtmodule",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":141,"title":{"injectables/jwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{},"overview.html":{}}}],["kamil",{"_index":748,"title":{},"body":{"index.html":{}}}],["license",{"_index":754,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":730,"title":{},"body":{"index.html":{}}}],["lista",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["listar",{"_index":364,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["literal",{"_index":758,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["local",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["login(@body",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":93,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":123,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["match",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtStrategy.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["mesa",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":522,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":501,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["minlength",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":691,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":729,"title":{},"body":{"index.html":{}}}],["mode",{"_index":719,"title":{},"body":{"index.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":743,"title":{},"body":{"index.html":{}}}],["mostar",{"_index":583,"title":{},"body":{"controllers/UserController.html":{}}}],["muito",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":749,"title":{},"body":{"index.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["nao",{"_index":618,"title":{},"body":{"injectables/UserService.html":{}}}],["nest",{"_index":708,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":753,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{},"injectables/jwtStrategy.html":{}}}],["nestjs/core",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{},"injectables/jwtStrategy.html":{}}}],["nestjs/platform",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":700,"title":{},"body":{"index.html":{}}}],["nome",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":498,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":504,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":713,"title":{},"body":{"index.html":{}}}],["number",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["numero",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["não",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["o",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.entries(seed",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observações",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["onmoduleinit",{"_index":426,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":731,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{}}}],["order",{"_index":234,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":390,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":375,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/UpdateOrderDto.html":{}}}],["order.dto.ts",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:22",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:32",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":377,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":356,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":58,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":376,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":773,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":777,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":662,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":372,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{}}}],["partial",{"_index":507,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":559,"title":{},"body":{"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createorderdto",{"_index":560,"title":{},"body":{"classes/UpdateOrderDto.html":{}}}],["partialtype(createproductdto",{"_index":562,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":564,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":568,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":676,"title":{},"body":{"dependencies.html":{},"injectables/jwtStrategy.html":{}}}],["passportmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":762,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":765,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":463,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":460,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":760,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["payload.nickname",{"_index":772,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["pedido",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":366,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":370,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["pelologin",{"_index":336,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["pizza",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":741,"title":{},"body":{"index.html":{}}}],["por",{"_index":451,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":361,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["presunto",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preço",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":401,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":421,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["prisma/prisma.service",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["prismaclient",{"_index":424,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":59,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":161,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{},"overview.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"injectables/jwtStrategy.html":{}}}],["product",{"_index":349,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":484,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":264,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":267,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:25",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:26",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":466,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/entities/product.entity",{"_index":354,"title":{},"body":{"classes/Order.html":{}}}],["product/product.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":444,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":721,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":60,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":465,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["profile",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":699,"title":{},"body":{"index.html":{}}}],["project",{"_index":732,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":201,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"properties.html":{}}}],["prouca",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["quantidade",{"_index":265,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["read",{"_index":742,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["realizando",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebendo",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["recheada",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":502,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":446,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(@param('id",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remove(id",{"_index":453,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["remover",{"_index":518,"title":{},"body":{"controllers/TableController.html":{}}}],["repository",{"_index":711,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":334,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":338,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:15",{"_index":340,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"injectables/jwtStrategy.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{}}}],["rimraf",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["rodando",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":716,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["sao",{"_index":619,"title":{},"body":{"injectables/UserService.html":{}}}],["scalable",{"_index":704,"title":{},"body":{"index.html":{}}}],["sdfgdfg",{"_index":262,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["sdfgdg",{"_index":261,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["se",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":771,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["seeds",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":410,"title":{},"body":{"injectables/OrderService.html":{}}}],["sem",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["senha",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/UserService.html":{}}}],["senhas",{"_index":624,"title":{},"body":{"injectables/UserService.html":{}}}],["server",{"_index":705,"title":{},"body":{"index.html":{}}}],["servidor",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["side",{"_index":706,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{},"injectables/jwtStrategy.html":{}}}],["sponsors",{"_index":735,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../sedd.ts",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":333,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":328,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":330,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":331,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"injectables/jwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:15",{"_index":759,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":756,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["src/auth/logged",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":641,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/dto/update",{"_index":558,"title":{},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":342,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":352,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":350,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":348,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":353,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":351,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":347,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":357,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":363,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":367,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":371,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":389,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":391,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":394,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:65",{"_index":395,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":392,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:88",{"_index":396,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":419,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service.ts",{"_index":422,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":429,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":431,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/sedd.ts",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":561,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts",{"_index":436,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":439,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":441,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":438,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":442,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":440,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":437,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":443,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":445,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:23",{"_index":449,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:31",{"_index":450,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:39",{"_index":452,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:47",{"_index":462,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:56",{"_index":456,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":483,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":485,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":493,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:16",{"_index":495,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:26",{"_index":496,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:30",{"_index":489,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:36",{"_index":497,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":492,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":487,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":294,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":563,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts",{"_index":510,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":512,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":513,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:4",{"_index":511,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:5",{"_index":514,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":516,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:32",{"_index":523,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:40",{"_index":524,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:48",{"_index":517,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:56",{"_index":527,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:65",{"_index":520,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":543,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":545,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":549,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:16",{"_index":550,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:26",{"_index":551,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:30",{"_index":547,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:40",{"_index":552,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:53",{"_index":548,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":546,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":566,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts",{"_index":569,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":571,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":574,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":573,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":575,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":572,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":570,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":576,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":578,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":580,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":582,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":585,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":587,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":586,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":601,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":603,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":604,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:13",{"_index":607,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":608,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":609,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:31",{"_index":605,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":610,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:71",{"_index":606,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":717,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":720,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":722,"title":{},"body":{"index.html":{}}}],["started",{"_index":698,"title":{"index.html":{}},"body":{}}],["starter",{"_index":710,"title":{},"body":{"index.html":{}}}],["statements",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":745,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":764,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["string",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["summary",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":766,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["support",{"_index":736,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":775,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":344,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":544,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":528,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":295,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":297,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":531,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/entities/table.entity",{"_index":355,"title":{},"body":{"classes/Order.html":{}}}],["table/table.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":515,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":61,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":530,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":725,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":728,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":727,"title":{},"body":{"index.html":{}}}],["tests",{"_index":724,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":734,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":433,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":434,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":505,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":381,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":382,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":385,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":409,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":412,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":414,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product",{"_index":508,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.create",{"_index":506,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":509,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":500,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":503,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table",{"_index":555,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":556,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":553,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":554,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.create",{"_index":623,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":613,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["this.productservice.create(createproductdto",{"_index":470,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":471,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":472,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":475,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":536,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":539,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":534,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":535,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":537,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userservice.create(createuserdto",{"_index":592,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":597,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":594,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":595,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":596,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"injectables/jwtStrategy.html":{}}}],["todas",{"_index":521,"title":{},"body":{"controllers/TableController.html":{}}}],["todos",{"_index":365,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["touch",{"_index":746,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":248,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":752,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["types/cors",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":709,"title":{},"body":{"index.html":{}}}],["ui",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":519,"title":{},"body":{"controllers/TableController.html":{}}}],["unauthorizedexception",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/jwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/jwtStrategy.html":{}}}],["undefined",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":723,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":761,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["unlicensed",{"_index":784,"title":{},"body":{"properties.html":{}}}],["update",{"_index":447,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":458,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":345,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["updateorderdto",{"_index":557,"title":{"classes/UpdateOrderDto.html":{}},"body":{"classes/UpdateOrderDto.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":459,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":525,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":565,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usando",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["useguards",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":104,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":602,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":567,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:42",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/jwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":589,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/entities/user.entity",{"_index":341,"title":{},"body":{"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["user/user.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":577,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":246,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{}}}],["usermodule",{"_index":62,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":588,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuario",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":593,"title":{},"body":{"controllers/UserController.html":{}}}],["usuarios'})@useguards(undefined)@apibearerauth",{"_index":581,"title":{},"body":{"controllers/UserController.html":{}}}],["usuário",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginDto.html":{}}}],["usúario",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["utils/handle",{"_index":398,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["valida",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":755,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["validate(payload",{"_index":757,"title":{},"body":{"injectables/jwtStrategy.html":{}}}],["validatenested",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":785,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":782,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/TableController.html":{}}}],["void",{"_index":457,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["watch",{"_index":718,"title":{},"body":{"index.html":{}}}],["website",{"_index":750,"title":{},"body":{"index.html":{}}}],["xbm",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":739,"title":{},"body":{"index.html":{}}}],["z",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    @ApiOperation({\n        summary: 'Visualizar status da aplicação',\n    })\n    getAppStatus(@Req() req: Request) {\n        const baseUrl = req.protocol + '://' + req.get('host');\n        return this.appService.getAppStatus(baseUrl);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { OrderModule } from './order/order.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { TableModule } from './table/table.module';\nimport { UserModule } from './user/user.module';\n\n@Module({\n    imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n    getAppStatus(baseUrl: string) {\n        return {\n            status: 'Servidor rodando!',\n            docs: baseUrl + '/api',\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @Post()\n    @HttpCode(HttpStatus.OK)\n    @ApiOperation({\n        summary: 'Realizar login, recebendo um token de autenticação',\n    })\n    login(@Body() loginDto: LoginDto): Promise {\n        return this.authService.login(loginDto);\n    }\n    @Get()\n    @UseGuards(AuthGuard())\n    @ApiOperation({\n        summary: 'Retorna o usuário autenticado no momento',\n    })\n    @ApiBearerAuth()\n    profile(@LoggedUser() user: User) {\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\njwtStrategy\n\njwtStrategy\n\nAuthModule -->\n\njwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            jwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtStrategy } from './jwt.strategy';\n\n@Module({\n    imports: [\n        PrismaModule,\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: '24h',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, jwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n    constructor(private readonly prisma: PrismaService, private readonly jwtService: JwtService) {}\n\n    async login(loginDto: LoginDto): Promise {\n        const { nickname, password } = loginDto;\n\n        //Prouca e checa se usuario existe, usando nickname\n        const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n        if (!user) {\n            throw new UnauthorizedException('Usuário não encontrado');\n        }\n\n        //Valida se a senha esta correta\n        const isHashValid = await bcrypt.compare(password, user.password);\n\n        if (!isHashValid) {\n            throw new UnauthorizedException('Usuário e/ou senha invalido');\n        }\n\n        delete user.password;\n        return {\n            token: this.jwtService.sign({ nickname }),\n            user,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Numero da mesa que esta realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n    /*     \n    @IsUUID()\n    @ApiProperty({\n        description: 'ID do usúario que está criando o pedido',\n        example: '1c8c90d8-f8ec-4404-96df-c88bca403347',\n    })\n    userId: string;\n    */\n\n    @IsInt()\n    @IsPositive()\n    @ApiProperty({\n        description: 'Numero da mesa que esta realizando o pedido',\n        example: 1,\n    })\n    tableNumber: number;\n\n    @ValidateNested({\n        each: true,\n    })\n    @Type(() => CreateOrderProductDto)\n    @ApiProperty({\n        description: 'Lista com os IDs dos produtos que estão no pedido',\n        type: [CreateOrderProductDto],\n    })\n    products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: 'dfgfdgdg-dgfdggfdg-sdfgdg-sdfgdfg-dfgg34'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de items no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n    @IsUUID()\n    @ApiProperty({\n        description: 'ID do produto',\n        example: 'dfgfdgdg-dgfdggfdg-sdfgdg-sdfgdfg-dfgg34',\n    })\n    productId: string;\n\n    @IsInt()\n    @IsPositive()\n    @ApiProperty({\n        description: 'Quantidade de items no pedido',\n        example: 1,\n    })\n    quantity: number;\n\n    @IsString()\n    @ApiProperty({\n        description: 'Observações do produto',\n        example: 'Sem cebola',\n    })\n    description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do Produto', example: 'Mussarela com borda recheada'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'http://www.pizzafresh.com/imagem-usuario'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do Produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: '45.00'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n    @IsString()\n    @ApiProperty({\n        description: 'Nome do Produto',\n        example: 'Pizza de Mussarela',\n    })\n    name: string;\n\n    @IsString()\n    @ApiProperty({\n        description: 'Descrição do Produto',\n        example: 'Mussarela com borda recheada',\n    })\n    description: string;\n\n    @IsNumber({\n        maxDecimalPlaces: 2,\n    })\n    @ApiProperty({\n        description: 'Preço do produto',\n        example: '45.00',\n    })\n    price: number;\n\n    @IsUrl()\n    @ApiProperty({\n        description: 'Imagem do produto',\n        example: 'http://www.pizzafresh.com/imagem-usuario',\n    })\n    image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'O numero da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n    @IsNumber()\n    @IsPositive()\n    @ApiProperty({\n        description: 'O numero da mesa',\n        example: 1,\n    })\n    number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Comfime a senha', example: 'Abcd@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de usuario', example: 'http://www.pizzafresh.com/imagem-usuario'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome completo', example: 'Carlos Eduardo Carvalho'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuario, Login', example: 'carlos-xbm'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha de usuario, Login', example: 'Abcd@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { match } from 'assert';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n    @IsString()\n    @ApiProperty({\n        description: 'Nome de usuario, Login',\n        example: 'carlos-xbm',\n    })\n    nickname: string;\n\n    @IsString()\n    @ApiProperty({\n        description: 'Nome completo',\n        example: 'Carlos Eduardo Carvalho',\n    })\n    name: string;\n\n    @IsString()\n    @MinLength(6)\n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n        message: 'Senha muito fraca',\n    })\n    @ApiProperty({\n        description: 'Senha de usuario, Login',\n        example: 'Abcd@123',\n    })\n    password: string;\n\n    @ApiProperty({\n        description: 'Comfime a senha',\n        example: 'Abcd@123',\n    })\n    confirmPassword: string;\n\n    @IsUrl()\n    @ApiProperty({\n        description: 'Imagem de usuario',\n        example: 'http://www.pizzafresh.com/imagem-usuario',\n    })\n    image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'carlos-xbm'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'senha de usuario', example: 'Abcd@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'Nickname do usuário',\n        example: 'carlos-xbm',\n    })\n    nickname: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        description: 'senha de usuario',\n        example: 'Abcd@123',\n    })\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'jwt gerado pelologin', example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6ImNhcmxvcy14Ym0iLCJpYXQiOjE2NzAzODIzMzcsImV4cCI6MTY3MDQ2ODczN30.M56L0hzO4qkcJ2F3wrlM0ncF1XFJclWDpHAQmswja18'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuario autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from '../../user/entities/user.entity';\n\nexport class LoginResponseDto {\n    @ApiProperty({\n        description: 'jwt gerado pelologin',\n        example:\n            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6ImNhcmxvcy14Ym0iLCJpYXQiOjE2NzAzODIzMzcsImV4cCI6MTY3MDQ2ODczN30.M56L0hzO4qkcJ2F3wrlM0ncF1XFJclWDpHAQmswja18',\n    })\n    token: string;\n\n    @ApiProperty({\n        description: 'Dados do usuario autenticado',\n    })\n    user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from '../../product/entities/product.entity';\nimport { Table } from '../../table/entities/table.entity';\nimport { User } from '../../user/entities/user.entity';\n\nexport class Order {\n    id?: string;\n    user?: User;\n    table?: Table;\n    createdAt?: Date;\n    updatedAt?: Date;\n    products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from '../auth/logged-user.decorator';\nimport { User } from '../user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n    constructor(private readonly orderService: OrderService) {}\n\n    @Post()\n    @ApiOperation({\n        summary: 'Criar um pedido',\n    })\n    create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n        return this.orderService.create(user.id, createOrderDto);\n    }\n\n    @Get()\n    @ApiOperation({\n        summary: 'Listar todos os pedidos',\n    })\n    findAll() {\n        return this.orderService.findAll();\n    }\n\n    @Get(':id')\n    @ApiOperation({\n        summary: 'Visualizar um pedido pelo ID',\n    })\n    findOne(@Param('id') id: string) {\n        return this.orderService.findOne(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    controllers: [OrderController],\n    providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { handleError } from '../utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n    constructor(private readonly prisma: PrismaService) {}\n\n    create(userId: string, createOrderDto: CreateOrderDto) {\n        const data: Prisma.OrderCreateInput = {\n            user: {\n                connect: {\n                    id: userId,\n                },\n            },\n            table: {\n                connect: {\n                    number: createOrderDto.tableNumber,\n                },\n            },\n            products: {\n                createMany: {\n                    data: createOrderDto.products.map((createOrderProductDto) => ({\n                        productId: createOrderProductDto.productId,\n                        quantity: createOrderProductDto.quantity,\n                        description: createOrderProductDto.description,\n                    })),\n                },\n            },\n        };\n\n        return this.prisma.order\n            .create({\n                data,\n                select: {\n                    id: true,\n                    table: {\n                        select: {\n                            number: true,\n                        },\n                    },\n                    user: {\n                        select: {\n                            name: true,\n                        },\n                    },\n                    products: {\n                        select: {\n                            quantity: true,\n                            description: true,\n                            products: {\n                                select: {\n                                    name: true,\n                                },\n                            },\n                        },\n                    },\n                },\n            })\n            .catch(handleError);\n    }\n\n    findAll() {\n        return this.prisma.order.findMany({\n            select: {\n                id: true,\n                table: {\n                    select: {\n                        number: true,\n                    },\n                },\n                user: {\n                    select: {\n                        name: true,\n                    },\n                },\n                _count: {\n                    select: {\n                        products: true,\n                    },\n                },\n            },\n        });\n    }\n\n    findOne(id: string) {\n        return this.prisma.order.findUnique({\n            where: { id },\n            include: {\n                user: {\n                    select: {\n                        name: true,\n                    },\n                },\n                table: {\n                    select: {\n                        number: true,\n                    },\n                },\n                products: {\n                    select: {\n                        products: {\n                            select: {\n                                id: true,\n                                name: true,\n                                price: true,\n                                image: true,\n                                description: true,\n                            },\n                        },\n                    },\n                },\n            },\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n    providers: [PrismaService],\n    exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication) {\n        this.$on('beforeExit', async () => {\n            await app.close();\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n    id?: string;\n    name: string;\n    description: string;\n    price: number;\n    image: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Lista de todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar um produto por ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um produto por ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um produto por ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body, Controller, Delete, Get, HttpCode,\n    HttpStatus, Param, Patch, Post, UseGuards\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ProductService } from './product.service';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n\n@Controller('product')\nexport class ProductController {\n    constructor(private readonly productService: ProductService) {}\n\n    @Post()\n    @ApiOperation({\n        summary: 'Criar um produto',\n    })\n    create(@Body() createProductDto: CreateProductDto) {\n        return this.productService.create(createProductDto);\n    }\n\n    @Get()\n    @ApiOperation({\n        summary: 'Lista de todos os produtos',\n    })\n    findAll() {\n        return this.productService.findAll();\n    }\n\n    @Get(':id')\n    @ApiOperation({\n        summary: 'Listar um produto por ID',\n    })\n    findOne(@Param('id') id: string) {\n        return this.productService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ApiOperation({\n        summary: 'Atualizar um produto por ID',\n    })\n    update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n        return this.productService.update(id, updateProductDto);\n    }\n\n    @Delete(':id')\n    @HttpCode(HttpStatus.NO_CONTENT)\n    @ApiOperation({\n        summary: 'Deletar um produto por ID',\n    })\n    remove(@Param('id') id: string) {\n        this.productService.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    controllers: [ProductController],\n    providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { handleError } from '../utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n    constructor(private readonly prisma: PrismaService) {}\n\n    findAll() {\n        return this.prisma.product.findMany();\n    }\n    // Method\n    async findById(id: string): Promise {\n        const record = await this.prisma.product.findUnique({ where: { id } });\n\n        if (!record) {\n            throw new NotFoundException(`Registro com o ID '${id}' não encontrado`);\n        }\n\n        return record;\n    }\n\n    async findOne(id: string): Promise {\n        return this.findById(id);\n    }\n\n    create(dto: CreateProductDto): Promise {\n        const data: Product = { ...dto };\n\n        return this.prisma.product.create({ data }).catch(handleError);\n    }\n\n    async update(id: string, dto: UpdateProductDto): Promise {\n        await this.findById(id);\n\n        const data: Partial = { ...dto };\n\n        return this.prisma.product\n            .update({\n                where: { id },\n                data,\n            })\n            .catch(handleError);\n    }\n\n    async delete(id: string) {\n        await this.findById(id);\n\n        await this.prisma.product.delete({ where: { id } });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n    id?: string;\n    number: number;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    HttpCode,\n    HttpStatus,\n    Param,\n    Patch,\n    Post,\n    UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\n\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n    constructor(private readonly tableService: TableService) {}\n\n    @Get()\n    @ApiOperation({\n        summary: 'Listar todas as mesas',\n    })\n    findAll(): Promise {\n        return this.tableService.findAll();\n    }\n\n    @Get(':id')\n    @ApiOperation({\n        summary: 'Visualizar mesa',\n    })\n    findOne(@Param('id') id: string): Promise {\n        return this.tableService.findOne(id);\n    }\n\n    @Post()\n    @ApiOperation({\n        summary: 'Criar mesa',\n    })\n    create(@Body() dto: CreateTableDto): Promise {\n        return this.tableService.create(dto);\n    }\n\n    @Patch(':id')\n    @ApiOperation({\n        summary: 'Editar uma mesa pelo ID',\n    })\n    update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n        return this.tableService.update(id, dto);\n    }\n\n    @Delete(':id')\n    @HttpCode(HttpStatus.NO_CONTENT)\n    @ApiOperation({\n        summary: 'Remover uma mesa pelo ID',\n    })\n    delete(@Param('id') id: string) {\n        this.tableService.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n    imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    controllers: [TableController],\n    providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { handleError } from '../utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n    constructor(private readonly prisma: PrismaService) {}\n\n    findAll() {\n        return this.prisma.table.findMany();\n    }\n    // Method\n    async findById(id: string): Promise {\n        const record = await this.prisma.table.findUnique({ where: { id } });\n\n        if (!record) {\n            throw new NotFoundException(`Registro com o ID '${id}' não encontrado`);\n        }\n\n        return record;\n    }\n\n    async findOne(id: string): Promise {\n        return this.findById(id);\n    }\n\n    create(dto: CreateTableDto): Promise {\n        const data: Table = { ...dto };\n\n        return this.prisma.table\n            .create({\n                data,\n            })\n            .catch(handleError);\n    }\n\n    async update(id: string, dto: UpdateTableDto): Promise {\n        await this.findById(id);\n\n        const data: Partial = { ...dto };\n\n        return this.prisma.table\n            .update({\n                where: { id },\n                data,\n            })\n            .catch(handleError);\n    }\n\n    async delete(id: string) {\n        await this.findById(id);\n\n        await this.prisma.table.delete({ where: { id } });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrderDto.html":{"url":"classes/UpdateOrderDto.html","title":"class - UpdateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/update-order.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateOrderDto } from './create-order.dto';\n\nexport class UpdateOrderDto extends PartialType(CreateOrderDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id?: string;\n    nickname: string;\n    name: string;\n    password: string;\n    image: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuario'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Lista com todos os usuarios'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Mostar usuario por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um usuario pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuario pelo ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Patch,\n    Param,\n    Delete,\n    HttpCode,\n    HttpStatus,\n    UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n    constructor(private readonly userService: UserService) {}\n\n    @Post()\n    @ApiOperation({\n        summary: 'Criar um usuario',\n    })\n    create(@Body() createUserDto: CreateUserDto) {\n        return this.userService.create(createUserDto);\n    }\n\n    @Get()\n    @ApiOperation({\n        summary: 'Lista com todos os usuarios',\n    })\n    @UseGuards(AuthGuard())\n    @ApiBearerAuth()\n    findAll() {\n        return this.userService.findAll();\n    }\n\n    @Get(':id')\n    @ApiOperation({\n        summary: 'Mostar usuario por ID',\n    })\n    @UseGuards(AuthGuard())\n    @ApiBearerAuth()\n    findOne(@Param('id') id: string) {\n        return this.userService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ApiOperation({\n        summary: 'Editar um usuario pelo ID',\n    })\n    @UseGuards(AuthGuard())\n    @ApiBearerAuth()\n    update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n        return this.userService.update(id, updateUserDto);\n    }\n\n    @Delete(':id')\n    @HttpCode(HttpStatus.NO_CONTENT)\n    @ApiOperation({\n        summary: 'Deletar um usuario pelo ID',\n    })\n    @UseGuards(AuthGuard())\n    @ApiBearerAuth()\n    remove(@Param('id') id: string) {\n        return this.userService.delete(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from '../prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n    controllers: [UserController],\n    providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { handleError } from '../utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n    constructor(private readonly prisma: PrismaService) {}\n\n    findAll() {\n        return this.prisma.user.findMany();\n    }\n    // Method\n    async findById(id: string): Promise {\n        const record = await this.prisma.user.findUnique({ where: { id } });\n\n        if (!record) {\n            throw new NotFoundException(`Registro com o ID '${id}' não encontrado`);\n        }\n\n        return record;\n    }\n\n    async findOne(id: string): Promise {\n        return this.findById(id);\n    }\n\n    async create(dto: CreateUserDto): Promise {\n        if (dto.password != dto.confirmPassword) {\n            throw new BadRequestException('As senha informadas nao sao iguais');\n        }\n\n        delete dto.confirmPassword;\n\n        const data: User = {\n            ...dto,\n            password: await bcrypt.hash(dto.password, 10),\n        };\n\n        return this.prisma.user.create({ data }).catch(handleError);\n    }\n\n    async update(id: string, dto: UpdateUserDto): Promise {\n        await this.findById(id);\n\n        if (dto.password) {\n            if (dto.password != dto.confirmPassword) {\n                throw new BadRequestException('As senhas informadas nao sao iguais.');\n            }\n        }\n\n        delete dto.confirmPassword;\n\n        const data: Partial = { ...dto };\n\n        if (data.password) {\n            data.password = await bcrypt.hash(data.password, 10);\n        }\n\n        return this.prisma.user\n            .update({\n                where: { id },\n                data,\n            })\n            .catch(handleError);\n    }\n\n    async delete(id: string) {\n        await this.findById(id);\n\n        await this.prisma.user.delete({ where: { id } });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            jwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/dto/update-order.dto.ts\n            \n            class\n            UpdateOrderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/sedd.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/sedd.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.2.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.3\n        \n            @prisma/client : ^4.7.1\n        \n            @types/cors : ^2.8.13\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/jwtStrategy.html":{"url":"injectables/jwtStrategy.html","title":"injectable - jwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  jwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class jwtStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly prisma: PrismaService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        });\n    }\n    async validate(payload: { nickname: string }) {\n        const user = await this.prisma.user.findUnique({ where: { nickname: payload.nickname } });\n\n        if (!user) {\n            throw new UnauthorizedException('Usuário não existe ou não está autenticado');\n        }\n\n        delete user.password;\n\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\njwtStrategy\n\njwtStrategy\n\nAuthModule -->\n\njwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../sedd.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../sedd.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    delete user.password;\n\n    return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/sedd.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n    for (const obj of Object.values(products)) {\n        await prisma.product.upsert({\n            where: { name: obj.name },\n            update: {},\n            create: {\n                ...obj,\n            },\n        });\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        name: 'Pizza de Mussarela',\n        description: 'Mussarela com borda recheada',\n        price: 45.0,\n        image: 'http://www.pizzafresh.com/imagem-usuario',\n    },\n    {\n        name: 'Pizza de Queijo',\n        description: 'Queijo com borda recheada',\n        price: 47.0,\n        image: 'http://www.pizzafresh.com/imagem-usuario',\n    },\n    {\n        name: 'Pizza de Presunto',\n        description: 'Presunto com borda recheada',\n        price: 49.0,\n        image: 'http://www.pizzafresh.com/imagem-usuario',\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n    for (const obj of Object.values(tables)) {\n        await prisma.table.upsert({\n            where: { number: obj.number },\n            update: {},\n            create: {\n                ...obj,\n            },\n        });\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        number: 1,\n    },\n    {\n        number: 2,\n    },\n    {\n        number: 3,\n    },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n    for (const obj of Object.values(users)) {\n        await prisma.user.upsert({\n            where: { nickname: obj.nickname },\n            update: {},\n            create: {\n                ...obj,\n                password: await bcrypt.hash(obj.password, 10),\n            },\n        });\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        nickname: 'carlos-xbm',\n        name: 'Carlos Eduardo Carvalho',\n        password: 'Abcd@123',\n        image: 'http://www.pizzafresh.com/imagem-usuario',\n    },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
